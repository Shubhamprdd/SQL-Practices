Q1. Query a count of the number of cities in CITY having a Population larger than 1,00,000.

SELECT COUNT(*) AS NumberOfCities
FROM  CITY
WHERE Population > 100000;


Q2. Query the total population of all cities in CITY where District is California.

SELECT SUM(POPULATION)
FROM CITY 
WHERE DISTRICT = 'California';


Q3. Query the average population of all cities in CITY where District is California.

SELECT AVG(POPULATION)
FROM CITY 
WHERE DISTRICT = 'California';


Q4. Query the average population for all cities in CITY, rounded down to the nearest integer.

SELECT ROUND(AVG(POPULATION), 1) AS AVG_POPULATION
FROM CITY;


Q5. Query the sum of the populations for all Japanese cities in CITY. The COUNTRYCODE for Japan is JPN.

SELECT SUM(POPULATION)
FROM CITY 
WHERE COUNTRYCODE = 'JPN';


Q6. Query the difference between the maximum and minimum populations in CITY.

SELECT MAX(POPULATION) - MIN(POPULATION) AS DIFFERENCE
FROM CITY;


Q7. Samantha was tasked with calculating the average monthly salaries for all employees in the EMPLOYEES table, 
but did not realize her keyboard's 0 key was broken until after completing the calculation. 
She wants your help finding the difference between her miscalculation (using salaries with any zeros removed), and the actual average salary.
Write a query calculating the amount of error (i.e.: Actual-Miscalculated average monthly salaries), and round it up to the next integer.

SELECT CEILING(AVG(SALARY) - AVG(REPLACE(SALARY,'0','') )) 
FROM Employees;


Q8. We define an employee's total earnings to be their monthly  worked, and the maximum total earnings to be the maximum total earnings for any employee in the Employee table. 
Write a query to find the maximum total earnings for all employees as well as the total number of employees who have maximum total earnings. Then print these values as 2 space-separated integers.

SELECT 
    MAX(Salary * Months) AS MaxTotalEarnings,
    COUNT(*) AS NumberOfEmployees
FROM 
    Employee
WHERE 
    Salary * Months = (SELECT MAX(Salary * Months) FROM Employee);


Q9. Query the following two values from the STATION table:

The sum of all values in LAT_N rounded to a scale of 2 decimal places.
The sum of all values in LONG_W rounded to a scale of 2 decimal places.

SELECT 
ROUND(SUM(LAT_N),2) AS TOTAL_LAT,
ROUND(SUM(LONG_W),2) AS TOTAL_LONG
FROM STATION;


Q10. Query the sum of Northern Latitudes (LAT_N) from STATION having values greater than 38.7880 and less than 137.2345. Truncate your answer to 4 decimal places.

SELECT 
    TRUNCATE(SUM(LAT_N), 4) AS SumLatitude
FROM 
    STATION
WHERE 
    LAT_N > 38.7880 AND LAT_N < 137.2345;


Q11. Query the greatest value of the Northern Latitudes (LAT_N) from STATION that is less than 137.2345. Truncate your answer to 4 decimal places.

SELECT TRUNCATE(MAX(LAT_N), 4)
FROM STATION 
WHERE LAT_N < 137.2345;

Q12. Query the Western Longitude (LONG_W) for the largest Northern Latitude (LAT_N) in STATION that is less than 137.2345. Round your answer to 4 decimal places.

SELECT ROUND(LONG_W, 4) AS RoundedLongitude
FROM STATION
WHERE 
LAT_N = (SELECT MAX(LAT_N) 
                FROM STATION 
                WHERE LAT_N < 137.2345);
